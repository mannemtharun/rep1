import random
import csv

# List of possible first names
first_names = ['Alice', 'Bob', 'Charlie', 'David', 'Emily', 'Frank', 'Gina', 'Harry', 'Isaac', 'Julia', 'Karen', 'Liam', 'Megan', 'Nancy', 'Olivia', 'Peter', 'Quincy', 'Rachel', 'Sarah', 'Thomas', 'Ursula', 'Victoria', 'Wendy', 'Xavier', 'Yara', 'Zoe']

# List of possible last names
last_names = ['Adams', 'Brown', 'Clark', 'Davis', 'Edwards', 'Foster', 'Garcia', 'Hernandez', 'Ingram', 'Johnson', 'Kumar', 'Lee', 'Martin', 'Nguyen', 'Olsen', 'Patel', 'Quinn', 'Ramirez', 'Smith', 'Taylor', 'Upton', 'Vargas', 'Williams', 'Xu', 'Yang', 'Zhang']

# Generate random names and write to CSV
with open('random_names.csv', 'w', newline='') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(['First Name', 'Last Name'])
    for i in range(30):
        first_name = random.choice(first_names)
        last_name = random.choice(last_names)
        writer.writerow([first_name, last_name])
        
        
        
        
        
        
import fuzzy

name1 = "John Smith"
name2 = "Jon Smyth"

soundex1 = fuzzy.Soundex(4)
soundex2 = fuzzy.Soundex(4)

code1 = soundex1(name1)
code2 = soundex2(name2)

similarity = code1 == code2

print(similarity)  # Output: True






import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer

# define two example sentences
sentence1 = "The quick brown fox jumps over the lazy dog."
sentence2 = "A quick brown dog jumps over the lazy fox."

# create a CountVectorizer object to convert sentences to vectors
vectorizer = CountVectorizer().fit_transform([sentence1, sentence2])

# calculate cosine similarity between the two vectors
cosine_similarities = cosine_similarity(vectorizer[0], vectorizer[1]).flatten()

# print the cosine similarity score
print("Cosine similarity between the two sentences:", cosine_similarities[0])
